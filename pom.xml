<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.payline</groupId>
	<artifactId>payline-java-sdk</artifactId>
	<version>4.77</version>
	<name>Payline JAVA SDK Project</name>
	<description>Modified for TBD using last WSDL from https://docs.monext.fr/display/DT/Endpoints. The Payline API provides access to the various functions of the Payline payment solution. It is based on standard web service components, which include the SOAP protocol, the WSDL and XSD definition languages. These standards are supported by a large range of development tools on multiple platforms. This SDK covers all the functions of the Payline payment solution.</description>

	<properties>
		<java.version>11</java.version>
		<WebPaymentAPI.service>WebPaymentAPI</WebPaymentAPI.service>
		<DirectPaymentAPI.service>DirectPaymentAPI</DirectPaymentAPI.service>
		<ExtendedAPI.service>ExtendedAPI</ExtendedAPI.service>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- JaCoCo Properties -->
		<jacoco.version>0.8.8</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.language>java</sonar.language>
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
		<sonar.sources>${project.basedir}/src/main/</sonar.sources>
		<sonar.tests>${project.basedir}/src/test/</sonar.tests>
		<sonar.jacoco.reportPath>${project.build.directory}/site/jacoco/jacoco.xml</sonar.jacoco.reportPath>
		<sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<url>www.payline.com</url>
	<developers>
		<developer>
			<name>Payline Dev Team</name>
			<organization>Monext</organization>
			<email>support@payline.com</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU Lesser General Public License (LGPLv3)</name>
			<url>http://www.gnu.org/copyleft/lesser.html</url>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/PaylineByMonext/payline-java-sdk</url>
	</scm>
	<organization>
		<name>MONEXT</name>
		<url>http://www.monext.fr/</url>
	</organization>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<profiles>
		<profile>
			<id>sign</id> <!-- this profile induce artifact signature -->
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<finalName>payline-java-sdk-${project.version}</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
<!--						<configuration>-->
<!--							&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
<!--							<destFile>${project.build.directory}/jacoco/jacoco.xml</destFile>-->
<!--						</configuration>-->
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<formats>
								<format>XML</format>
							</formats>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
<!--						<configuration>-->
<!--							<dataFile>${project.build.directory}/jacoco/jacoco.xml</dataFile>-->
<!--							<outputDirectory>${project.build.directory}/jacoco</outputDirectory>-->
<!--						</configuration>-->
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.13</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<source>8</source>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<excludePackageNames>com.payline.ws.*</excludePackageNames>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>wsimport-from-jdk-extendedapi</id>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<vmArgs>
								<vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
							</vmArgs>
							<bindingFiles>
								<bindingFile>${basedir}/src/main/resources/bindings/bind.xml</bindingFile>
							</bindingFiles>
							<!--wsdls file directory -->
							<wsdlDirectory>${basedir}/src/main/resources/wsdls</wsdlDirectory>
							<!-- wsdl file -->
							<wsdlFiles>
								<wsdlFile>${ExtendedAPI.service}.wsdl</wsdlFile>
							</wsdlFiles>
							<!-- Keep generated files -->
							<keep>true</keep>
							<!-- Package name -->
							<packageName>com.payline.ws.model</packageName>
							<!-- generated source files destination -->
							<!-- File referenced in /payline-java-sdk/src/main/java/com/payline/kit/utils/Utils.java -->
							<wsdlLocation>wsdls/${ExtendedAPI.service}.wsdl</wsdlLocation>
						</configuration>
					</execution>
					<execution>
						<id>wsimport-from-jdk-directpaymentapi</id>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<vmArgs>
								<vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
							</vmArgs>
							<bindingFiles>
								<bindingFile>${basedir}/src/main/resources/bindings/bind.xml</bindingFile>
							</bindingFiles>
							<!--wsdls file directory -->
							<wsdlDirectory>${basedir}/src/main/resources/wsdls</wsdlDirectory>
							<!-- wsdl file -->
							<wsdlFiles>
								<wsdlFile>${DirectPaymentAPI.service}.wsdl</wsdlFile>
							</wsdlFiles>
							<!-- Keep generated files -->
							<keep>true</keep>
							<!-- Package name -->
							<packageName>com.payline.ws.model</packageName>
							<!-- generated source files destination -->
							<!-- File referenced in /payline-java-sdk/src/main/java/com/payline/kit/utils/Utils.java -->
							<wsdlLocation>wsdls/${DirectPaymentAPI.service}.wsdl</wsdlLocation>
						</configuration>
					</execution>
					<execution>
						<id>wsimport-from-jdk-webpaymentapi</id>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<vmArgs>
								<vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
							</vmArgs>
							<bindingFiles>
								<bindingFile>${basedir}/src/main/resources/bindings/bind.xml</bindingFile>
							</bindingFiles>
							<!--wsdls file directory -->
							<wsdlDirectory>${basedir}/src/main/resources/wsdls</wsdlDirectory>
							<!-- wsdl file -->
							<wsdlFiles>
								<wsdlFile>${WebPaymentAPI.service}.wsdl</wsdlFile>
							</wsdlFiles>
							<!-- Keep generated files -->
							<keep>true</keep>
							<!-- Package name -->
							<packageName>com.payline.ws.model</packageName>
							<!-- generated source files destination -->
							<!-- File referenced in /payline-java-sdk/src/main/java/com/payline/kit/utils/Utils.java -->
							<wsdlLocation>wsdls/${WebPaymentAPI.service}.wsdl</wsdlLocation>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- DEPENDENCIES REFERENCES -->
	<dependencies>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.13</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.9</version>
		</dependency>
		<dependency>
			<groupId>javax.jws</groupId>
			<artifactId>jsr181-api</artifactId>
			<version>1.0-MR1</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.3.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0.1</version>
		</dependency>

		<!-- API, java.xml.bind module -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>2.3.2</version>
		</dependency>

		<!-- Runtime, com.sun.xml.bind module -->
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.2</version>
		</dependency>


		<!-- TEST -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.10.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.wiremock</groupId>
			<artifactId>wiremock</artifactId>
			<version>3.3.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Compatibility for Java 11 -->
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>rt</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
	</dependencies>
</project>
